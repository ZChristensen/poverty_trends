names(excelpovcal)=c("PovGapExcel","HeadCountExcel","RequestYear","CountryName")
smy_total=smy_total[which(smy_total$PovertyLine==1.9),]
smy_total=join(smy_total,excelpovcal,by=c("RequestYear","CountryName"))
smy_total$diff=smy_total$PovGap-smy_total$PovGapExcel
diffs=smy_total[which(abs(smy_total$diff)>0),]
povcalcuts=join(povcalcuts,excelpovcal,by=c("RequestYear","CountryName"))
povcalcuts$diff=povcalcuts$PovGap-povcalcuts$PovGapExcel
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
names(povcalcuts)
povcalcuts$diff=povcalcuts$HeadCount-povcalcuts$HeadCountExcel
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
if(nrow(diffs)>0){
stop("differences with extreme poverty headcounts")
}
View(povcalcuts)
excelpovcal=read.csv("C:/Users/Zach/Downloads/CountryTable_1.9 (8).csv")
excelpovcal=excelpovcal[which(excelpovcal$CoverageType %in% c("A","N")),]
excelpovcal=excelpovcal[,c("PovGap","HeadCount","RequestYear","CountryName")]
names(excelpovcal)=c("PovGapExcel","HeadCountExcel","RequestYear","CountryName")
povcalcuts=join(povcalcuts,excelpovcal,by=c("RequestYear","CountryName"))
povcalcuts$diff=povcalcuts$ExtPovHC-povcalcuts$HeadCountExcel
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
if(nrow(diffs)>0){
stop("differences with extreme poverty headcounts")
}
View(povcalcuts)
list.of.packages <- c("data.table","plyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
# Loading PovcalNet data
if(.Platform$OS.type == "unix"){
prefix = "~"
}else{
prefix = "E:"
}
wd = paste0(prefix,"/git/poverty_trends")
setwd(wd)
# source("code/povcal_api_survey_years.R")
#
# agg_results = list()
# smy_results = list()
# list_index = 1
#
# load("data/povcal_list_tmp.RData")
#
# for(povline in c(
#   seq(from=0,to=10,by=0.01),
#   seq(from=10.25,to=25.5,by=0.25),
#   seq(from=25.525,to=35.5,by=0.025),
#   seq(from=36,to=500,by=1),
#   seq(from=505,to=800,by=5)
#   )){
#   message(povline)
#   smy = povcal_smy(pl=povline)
#   smy_results[[list_index]] = smy
#   list_index=list_index+1
# }
#
# save(smy_results,list_index,file="data/povcal_list_tmp.RData")
#
# smy_total=rbindlist(smy_results)
#
#
#
#  save(smy_total,file="data/SMYPovcalScrapeSept2018_svyYear.RData")
linedupyears=c(
1981
,1984
,1987
,1990
,1993
,1996
,1999
,2002
,2005
,2008
,2010
,2011
,2012
,2013
,2015
)
# smy_total_low = subset(smy_total,PovertyLine<=10)
# smy_total_high = subset(smy_total,PovertyLine>10)
# save(smy_total_low,file="data/SMYPovcalScrapeSept2018svy_low.RData")
# save(smy_total_high,file="data/SMYPovcalScrapeSept2018svy_high.RData")
# load("C:/Users/Zach/Documents/Poverty data/SMYPovcalScrape1May2018.RData")
# load("C:/Users/Zach/Documents/Poverty data/AGGPovcalScrape1May2018.RData")
# wd="C:/Users/Zach/Documents/Poverty data"
# setwd(wd)
load("data/SMYPovcalScrapeSept2018_svyYear.RData")
smy_total=unique(smy_total)
smy_svy=smy_total[which(!smy_total$RequestYear %in% linedupyears)]
smy_svy=smy_svy[which(smy_svy$PovertyLine>0),]
dropped=c(
"LVA_N2007X"
,"LVA_N2004X"
,"LVA_N2009X"
,"LTU_N2004X"
,"HRV_N2009X"
,"HUN_N2006X"
,"HRV_N2006X"
,"MEX_N1998Y"
,"MEX_N2000Y"
,"MEX_N1992Y"
,"MEX_N1994Y"
,"MEX_N2004Y"
,"MEX_N2006Y"
,"MEX_N2014Y"
,"MEX_N2016Y"
,"POL_N2004Y"
,"POL_N2006Y"
,"POL_N2007Y"
,"POL_N2009Y"
,"POL_N2014Y"
,"EST_N2003X"
,"EST_N2004X"
,"SVK_N2004X"
,"SVK_N2006X"
,"SVK_N2007X"
,"SVK_N2009X"
,"BGR_N2007Y"
,"HUN_N2007X"
,"HUN_N2004X"
,"NIC_N1998Y"
,"NIC_N2001Y"
,"PHL_N2000Y"
,"PHL_N2003Y"
,"PHL_N2006Y"
,"PHL_N2008Y"
,"PHL_N2009Y"
,"ROU_N2006Y"
,"ROU_N2007Y"
,"ROU_N2009Y"
)
smy_svy=smy_svy[which(!smy_svy$SvyInfoID %in% dropped),]
load("data/SMYPovcalScrapeSept2018_low.RData")
load("data/SMYPovcalScrapeSept2018_high.RData")
load("data/AGGPovcalScrapeSept2018.RData")
smy_total = rbind(smy_total_low,smy_total_high,smy_svy)
smy_total=subset(smy_total, CoverageType %in% c("N","A"))
countrycount=smy_total[,.(count=nrow(.SD),svyids=paste(unique(SvyInfoID),collapse=", ")),by=.(CountryName,RequestYear)]
if(nrow(countrycount[which(countrycount$count>2000),])>0){
stop("check for duplicate surveys")
}
agg_total$ConsumptionFloor = agg_total$povertyLine*(1-(agg_total$p2/agg_total$pg))
agg_total$diff=abs(agg_total$hc-0.2)
regional.extpov = subset(agg_total, povertyLine==1.90)
GlobalExtPov = subset(regional.extpov, regionTitle=="World Total")
names(GlobalExtPov)[which(names(GlobalExtPov)=="ConsumptionFloor")] <- "Global.Consumption.Floor"
names(GlobalExtPov)[which(names(GlobalExtPov)=="hc")] <- "Global.Ext.HC"
keep=c("requestYear","Global.Consumption.Floor","Global.Ext.HC")
GlobalExtPov=GlobalExtPov[,keep,with=F]
regional.p20 = data.table(agg_total)[,.SD[which.min(diff)],by=.(regionTitle,requestYear)]
WorldP20threshold = subset(regional.p20, regionTitle=="World Total")
WorldP20threshold$P20Threshold = WorldP20threshold$povertyLine
keep=c("requestYear","P20Threshold")
WorldP20threshold2=data.frame(WorldP20threshold)[,keep]
smy_total$ConsumptionFloor= smy_total$PovertyLine*(1-(smy_total$PovGapSqr/smy_total$PovGap))
smy_total$diff = abs(smy_total$HeadCount - 0.20)
setnames(WorldP20threshold2,"requestYear","RequestYear")
smy_total=join(smy_total, WorldP20threshold2, by="RequestYear")
smy_P20 = subset(smy_total, PovertyLine==P20Threshold)
names(smy_P20)[which(names(smy_P20)=="HeadCount")] <- "P20Headcount"
keep=c("CountryName","RequestYear","PovertyLine","HeadCount","CountryCode","ConsumptionFloor")
smy_total2=smy_total[,keep,with=F]
countries.np20 = data.table(smy_total)[,.SD[which.min(diff)],by=.(CountryCode,RequestYear)]
names(countries.np20)[which(names(countries.np20)=="PovGap")] <- "NP20PG"
keep=c("CountryName","RequestYear","PovertyLine","HeadCount","CountryCode","NP20PG")
countries.np20=data.frame(countries.np20)[,keep]
colnames(countries.np20)[colnames(countries.np20)=="PovertyLine"] <-"NP20.Threshold"
smy_extremepov = subset(smy_total2,PovertyLine==1.90)
View(smy_extremepov)
names(smy_total)
list.of.packages <- c("data.table","plyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
# Loading PovcalNet data
if(.Platform$OS.type == "unix"){
prefix = "~"
}else{
prefix = "E:"
}
wd = paste0(prefix,"/git/poverty_trends")
setwd(wd)
# source("code/povcal_api_survey_years.R")
#
# agg_results = list()
# smy_results = list()
# list_index = 1
#
# load("data/povcal_list_tmp.RData")
#
# for(povline in c(
#   seq(from=0,to=10,by=0.01),
#   seq(from=10.25,to=25.5,by=0.25),
#   seq(from=25.525,to=35.5,by=0.025),
#   seq(from=36,to=500,by=1),
#   seq(from=505,to=800,by=5)
#   )){
#   message(povline)
#   smy = povcal_smy(pl=povline)
#   smy_results[[list_index]] = smy
#   list_index=list_index+1
# }
#
# save(smy_results,list_index,file="data/povcal_list_tmp.RData")
#
# smy_total=rbindlist(smy_results)
#
#
#
#  save(smy_total,file="data/SMYPovcalScrapeSept2018_svyYear.RData")
linedupyears=c(
1981
,1984
,1987
,1990
,1993
,1996
,1999
,2002
,2005
,2008
,2010
,2011
,2012
,2013
,2015
)
# smy_total_low = subset(smy_total,PovertyLine<=10)
# smy_total_high = subset(smy_total,PovertyLine>10)
# save(smy_total_low,file="data/SMYPovcalScrapeSept2018svy_low.RData")
# save(smy_total_high,file="data/SMYPovcalScrapeSept2018svy_high.RData")
# load("C:/Users/Zach/Documents/Poverty data/SMYPovcalScrape1May2018.RData")
# load("C:/Users/Zach/Documents/Poverty data/AGGPovcalScrape1May2018.RData")
# wd="C:/Users/Zach/Documents/Poverty data"
# setwd(wd)
load("data/SMYPovcalScrapeSept2018_svyYear.RData")
smy_total=unique(smy_total)
smy_svy=smy_total[which(!smy_total$RequestYear %in% linedupyears)]
smy_svy=smy_svy[which(smy_svy$PovertyLine>0),]
dropped=c(
"LVA_N2007X"
,"LVA_N2004X"
,"LVA_N2009X"
,"LTU_N2004X"
,"HRV_N2009X"
,"HUN_N2006X"
,"HRV_N2006X"
,"MEX_N1998Y"
,"MEX_N2000Y"
,"MEX_N1992Y"
,"MEX_N1994Y"
,"MEX_N2004Y"
,"MEX_N2006Y"
,"MEX_N2014Y"
,"MEX_N2016Y"
,"POL_N2004Y"
,"POL_N2006Y"
,"POL_N2007Y"
,"POL_N2009Y"
,"POL_N2014Y"
,"EST_N2003X"
,"EST_N2004X"
,"SVK_N2004X"
,"SVK_N2006X"
,"SVK_N2007X"
,"SVK_N2009X"
,"BGR_N2007Y"
,"HUN_N2007X"
,"HUN_N2004X"
,"NIC_N1998Y"
,"NIC_N2001Y"
,"PHL_N2000Y"
,"PHL_N2003Y"
,"PHL_N2006Y"
,"PHL_N2008Y"
,"PHL_N2009Y"
,"ROU_N2006Y"
,"ROU_N2007Y"
,"ROU_N2009Y"
)
smy_svy=smy_svy[which(!smy_svy$SvyInfoID %in% dropped),]
load("data/SMYPovcalScrapeSept2018_low.RData")
load("data/SMYPovcalScrapeSept2018_high.RData")
load("data/AGGPovcalScrapeSept2018.RData")
smy_total = rbind(smy_total_low,smy_total_high,smy_svy)
smy_total=subset(smy_total, CoverageType %in% c("N","A"))
countrycount=smy_total[,.(count=nrow(.SD),svyids=paste(unique(SvyInfoID),collapse=", ")),by=.(CountryName,RequestYear)]
if(nrow(countrycount[which(countrycount$count>2000),])>0){
stop("check for duplicate surveys")
}
agg_total$ConsumptionFloor = agg_total$povertyLine*(1-(agg_total$p2/agg_total$pg))
agg_total$diff=abs(agg_total$hc-0.2)
regional.extpov = subset(agg_total, povertyLine==1.90)
GlobalExtPov = subset(regional.extpov, regionTitle=="World Total")
names(GlobalExtPov)[which(names(GlobalExtPov)=="ConsumptionFloor")] <- "Global.Consumption.Floor"
names(GlobalExtPov)[which(names(GlobalExtPov)=="hc")] <- "Global.Ext.HC"
keep=c("requestYear","Global.Consumption.Floor","Global.Ext.HC")
GlobalExtPov=GlobalExtPov[,keep,with=F]
regional.p20 = data.table(agg_total)[,.SD[which.min(diff)],by=.(regionTitle,requestYear)]
WorldP20threshold = subset(regional.p20, regionTitle=="World Total")
WorldP20threshold$P20Threshold = WorldP20threshold$povertyLine
keep=c("requestYear","P20Threshold")
WorldP20threshold2=data.frame(WorldP20threshold)[,keep]
smy_total$ConsumptionFloor= smy_total$PovertyLine*(1-(smy_total$PovGapSqr/smy_total$PovGap))
smy_total$diff = abs(smy_total$HeadCount - 0.20)
setnames(WorldP20threshold2,"requestYear","RequestYear")
smy_total=join(smy_total, WorldP20threshold2, by="RequestYear")
smy_P20 = subset(smy_total, PovertyLine==P20Threshold)
names(smy_P20)[which(names(smy_P20)=="HeadCount")] <- "P20Headcount"
keep=c("CountryName","RequestYear","PovertyLine","HeadCount","CountryCode","ConsumptionFloor","PovGap")
smy_total2=smy_total[,keep,with=F]
countries.np20 = data.table(smy_total)[,.SD[which.min(diff)],by=.(CountryCode,RequestYear)]
names(countries.np20)[which(names(countries.np20)=="PovGap")] <- "NP20PG"
keep=c("CountryName","RequestYear","PovertyLine","HeadCount","CountryCode","NP20PG")
countries.np20=data.frame(countries.np20)[,keep]
colnames(countries.np20)[colnames(countries.np20)=="PovertyLine"] <-"NP20.Threshold"
smy_extremepov = subset(smy_total2,PovertyLine==1.90)
names(smy_extremepov)[which(names(smy_extremepov)=="HeadCount")] <- "ExtPovHC"
names(smy_extremepov)[which(names(smy_extremepov)=="PovGap")] <- "ExtPovGap"
smy_extremepov$PovertyLine = NULL
smy_extremepov$ConsumptionFloor = NULL
names(smy_total2)
smy_total2=smy_total2[,c("CountryName","RequestYear","PovertyLine","HeadCount","CountryCode","ConsumptionFloor")]
smy_LMpov = subset(smy_total2,PovertyLine==3.20)
names(smy_LMpov)[which(names(smy_LMpov)=="HeadCount")] <- "LMPovHC"
smy_LMpov$PovertyLine = NULL
smy_LMpov$ConsumptionFloor = NULL
smy_UMpov = subset(smy_total2,PovertyLine==5.50)
names(smy_UMpov)[which(names(smy_UMpov)=="HeadCount")] <- "UMPovHC"
smy_UMpov$PovertyLine = NULL
smy_UMpov$ConsumptionFloor = NULL
dfs <- list(smy_extremepov,smy_LMpov,smy_UMpov,countries.np20)
P20main<- join_all(dfs,by=c("RequestYear","CountryCode","CountryName"))
P20main<- join(P20main,smy_P20,by=c("RequestYear","CountryCode","CountryName"))
rm("smy_P20","smy_extremepov","smy_LMpov","smy_UMpov","countries.np20")
gc()
#Calculate averages of P20 and rest
P20main= data.frame(P20main)
P20main=P20main[which(P20main$CoverageType %in% c("A","N")|!P20main$RequestYear %in% linedupyears),]
P20main$pop = P20main$ReqYearPopulation * 1000000
P20main$P20pop = (P20main$P20Headcount)*(P20main$pop)
P20main$P20average = P20main$PovertyLine -((P20main$PovertyLine*(P20main$PovGap)*P20main$pop)/P20main$P20pop)
P20main$restpop = P20main$pop - P20main$P20pop
P20main$restaverage = (((P20main$Mean/(365/12))*P20main$pop)-(P20main$P20average * P20main$P20pop))/P20main$restpop
#Calculate averages of NP20 and rest
P20main$NP20pop = P20main$pop * .20
P20main$NP20average = P20main$NP20.Threshold -((P20main$NP20.Threshold*(P20main$NP20PG)*P20main$pop)/P20main$NP20pop)
P20main$restpop = P20main$pop - P20main$NP20pop
P20main$Nrestaverage = (((P20main$Mean/(365/12))*P20main$pop)-(P20main$NP20average * P20main$NP20pop))/P20main$restpop
setnames(GlobalExtPov,"requestYear","RequestYear")
P20main=join(P20main, GlobalExtPov, by="RequestYear")
View(P20main)
write.csv(P20main,"data/P20incometrends.csv",row.names=FALSE,na="")
write.csv(P20main,"E:/git/income_trends/data/P20incometrends.csv",row.names=FALSE,na="")
list.of.packages <- c("Hmisc","foreign","data.table","plyr","zoo")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
if(.Platform$OS.type == "unix"){
prefix = "~"
}else{
prefix = "E:"
}
wd = paste0(prefix,"/git/poverty_trends")
setwd(wd)
povcalcuts <- read.csv("data/P20incometrends.csv",as.is=TRUE)
excelpovcal=read.csv("C:/Users/Zach/Downloads/CountryTable_1.9 (8).csv")
excelpovcal=excelpovcal[which(excelpovcal$CoverageType %in% c("A","N")),]
excelpovcal=excelpovcal[,c("PovGap","HeadCount","RequestYear","CountryName")]
names(excelpovcal)=c("PovGapExcel","HeadCountExcel","RequestYear","CountryName")
povcalcuts=join(povcalcuts,excelpovcal,by=c("RequestYear","CountryName"))
povcalcuts$diff=povcalcuts$ExtPovHC-povcalcuts$HeadCountExcel
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
if(nrow(diffs)>0){
stop("differences with extreme poverty headcounts")
}
list.of.packages <- c("Hmisc","foreign","data.table","plyr","zoo")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
if(.Platform$OS.type == "unix"){
prefix = "~"
}else{
prefix = "E:"
}
wd = paste0(prefix,"/git/poverty_trends")
setwd(wd)
povcalcuts <- read.csv("data/P20incometrends.csv",as.is=TRUE)
excelpovcal=read.csv("C:/Users/Zach/Downloads/CountryTable_1.9 (8).csv")
excelpovcal=excelpovcal[which(excelpovcal$CoverageType %in% c("A","N")),]
excelpovcal=excelpovcal[,c("PovGap","HeadCount","RequestYear","CountryName")]
names(excelpovcal)=c("PovGapExcel","HeadCountExcel","RequestYear","CountryName")
povcalcuts=join(povcalcuts,excelpovcal,by=c("RequestYear","CountryName"))
povcalcuts$diff=povcalcuts$ExtPovHC-povcalcuts$HeadCountExcel
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
if(nrow(diffs)>0){
stop("differences with extreme poverty headcounts")
}
View(povcalcuts)
povcalcuts$diff=povcalcuts$ExtPovGap-povcalcuts$PovGapExcel
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
if(nrow(diffs)>0){
stop("differences with extreme poverty headcounts")
}
povcalcuts$diff=povcalcuts$ExtPovGap-povcalcuts$PovGapExcel
diffs=povcalcuts[which(abs(povcalcuts$diff)>0),]
if(nrow(diffs)>0){
stop("differences with extreme poverty gaps")
}
metadata <- read.csv("data/metadata.csv",as.is=TRUE,na.strings="")
metadata=metadata[,c("PovcalNet.name","di_id")]
metadata=subset(metadata, di_id!="#N/A" & PovcalNet.name!="#N/A")
names(metadata)[1]="CountryName"
data.list=list()
data.index=1
for(year in 1981:2017){
yearset= list()
for(country in c(unique(povcalcuts$CountryName))){
yearset[["RequestYear"]]=year
yearset[["CountryName"]]=country
yearsetlist=data.frame(yearset)
data.list[[data.index]]=yearsetlist
data.index=data.index+1
}
}
povcalallyrs = data.frame(rbindlist(data.list,fill=T))
if(length(setdiff(povcalallyrs$CountryName,metadata$CountryName))>0){
stop("check country names")
}
povcalcutslong <- join(povcalallyrs,povcalcuts,by=c("RequestYear","CountryName"),type="left")
povcalcutslong=subset(povcalcutslong,!is.na(CountryName))
povcalcutslong=povcalcutslong[order(povcalcutslong$CountryName,povcalcutslong$RequestYear),]
povcalcutslong=join(povcalcutslong,metadata,by="CountryName",type="left")
# povcalcutslong$pop=as.numeric(povcalcutslong$Populations)*1000000
povcalcutslong$ExtPovPop= round(povcalcutslong$ExtPovHC * povcalcutslong$pop)
povcalcutslong$P20pop=round(povcalcutslong$P20pop)
dat=data.table(povcalcutslong)[,.(
Year=RequestYear
,ExtPovHC=ExtPovHC
,ExtPovHC.Interp=na.approx(ExtPovHC,rule=2)
,ExtPovHC.Interp.Trunc=na.approx(ExtPovHC,rule=2)
,ModeratePovertyPercentage=LMPovHC
,ModeratePovertyPercentage.Interp=na.approx(LMPovHC,rule=2)
,Poorpop=ExtPovPop,Poorpop.Interp=na.approx(ExtPovPop,rule=2)
,P20percentage=P20Headcount
,P20population=P20pop
,Depth.Of.Extreme.Poverty=PovGap
),by=.(di_id)]
dat$problem=NA
dat$problem[which(dat$P20percentage>dat$ExtPovHC & dat$P20population<dat$Poorpop)]=1
probs=subset(dat, problem==1)
if(nrow(probs)>0){
stop("P20 rate is higher than extreme poverty rate but P20 population is lower than poor population")
}
dat$problem=NA
dat$problem[which(dat$ExtPovHC!=dat$ExtPovHC.Interp|dat$ExtPovHC.Interp.Trunc!=dat$ExtPovHC|dat$ModeratePovertyPercentage!=dat$ModeratePovertyPercentage.Interp|dat$ExtPovHC>dat$ModeratePovertyPercentage|dat$Poorpop!=dat$Poorpop.Interp)]=1
probs=subset(dat, problem==1)
if(nrow(probs)>0){
stop("something went wrong with interpolations")
}
dat$ExtPovHC.Interp.Trunc[which(dat$Year>2015)]=dat$ExtPovHC[which(dat$Year>2015)]
poor_pop =dat[,c("di_id","Year","ExtPovHC","ExtPovHC.Interp.Trunc","ExtPovHC.Interp"),with=F]
pop_in_poverty = dat[,c("di_id","Year","Poorpop","Poorpop.Interp","P20population"),with=F]
pov_gap = dat[,c("di_id","Year","Depth.Of.Extreme.Poverty"),with=F]
less.than.3.20=dat[,c("di_id","Year","ModeratePovertyPercentage"),with=F]
Number.of.people.in.the.P20=dat[,c("di_id","Year","P20population"),with=F]
Percent.in.the.P20=dat[,c("di_id","Year","P20percentage"),with=F]
View(pov_gap)
dat=data.table(povcalcutslong)[,.(
Year=RequestYear
,ExtPovHC=ExtPovHC
,ExtPovHC.Interp=na.approx(ExtPovHC,rule=2)
,ExtPovHC.Interp.Trunc=na.approx(ExtPovHC,rule=2)
,ModeratePovertyPercentage=LMPovHC
,ModeratePovertyPercentage.Interp=na.approx(LMPovHC,rule=2)
,Poorpop=ExtPovPop,Poorpop.Interp=na.approx(ExtPovPop,rule=2)
,P20percentage=P20Headcount
,P20population=P20pop
,Depth.Of.Extreme.Poverty=ExtPovGap
),by=.(di_id)]
dat$problem=NA
dat$problem[which(dat$P20percentage>dat$ExtPovHC & dat$P20population<dat$Poorpop)]=1
probs=subset(dat, problem==1)
if(nrow(probs)>0){
stop("P20 rate is higher than extreme poverty rate but P20 population is lower than poor population")
}
dat$problem=NA
dat$problem[which(dat$ExtPovHC!=dat$ExtPovHC.Interp|dat$ExtPovHC.Interp.Trunc!=dat$ExtPovHC|dat$ModeratePovertyPercentage!=dat$ModeratePovertyPercentage.Interp|dat$ExtPovHC>dat$ModeratePovertyPercentage|dat$Poorpop!=dat$Poorpop.Interp)]=1
probs=subset(dat, problem==1)
if(nrow(probs)>0){
stop("something went wrong with interpolations")
}
dat$ExtPovHC.Interp.Trunc[which(dat$Year>2015)]=dat$ExtPovHC[which(dat$Year>2015)]
poor_pop =dat[,c("di_id","Year","ExtPovHC","ExtPovHC.Interp.Trunc","ExtPovHC.Interp"),with=F]
pop_in_poverty = dat[,c("di_id","Year","Poorpop","Poorpop.Interp","P20population"),with=F]
pov_gap = dat[,c("di_id","Year","Depth.Of.Extreme.Poverty"),with=F]
less.than.3.20=dat[,c("di_id","Year","ModeratePovertyPercentage"),with=F]
Number.of.people.in.the.P20=dat[,c("di_id","Year","P20population"),with=F]
Percent.in.the.P20=dat[,c("di_id","Year","P20percentage"),with=F]
View(pov_gap)
write.csv(data.frame(poor_pop),"data/data_warehouse/poor_pop.csv",row.names=F, na="")
write.csv(data.frame(pop_in_poverty),"data/data_warehouse/pop_in_poverty.csv",row.names=F, na="")
write.csv(data.frame(pov_gap),"data/data_warehouse/depth_of_extreme_poverty.csv",row.names=F,na="")
write.csv(data.frame(less.than.3.20),"data/data_warehouse/percent_of_population_living_less_than_320_a_day.csv",row.names=F,na="")
write.csv(data.frame(Number.of.people.in.the.P20),"data/data_warehouse/number_of_people_in_P20.csv",row.names=F,na="")
write.csv(data.frame(Percent.in.the.P20),"data/data_warehouse/percent_in_P20.csv",row.names=F,na="")
